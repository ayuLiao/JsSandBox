HTMLElement = function HTMLElement(){box.throwError("TypeError", "Illegal constructor") }
box.func_set_fake_toString(HTMLElement)
box.rename(HTMLElement.prototype, "HTMLElement")

Object.setPrototypeOf(HTMLElement.prototype,Element.prototype)

box.defineProperty(HTMLElement, 'length', 0, true, false, false);
box.defineProperty(HTMLElement, 'name', 'HTMLElement', true, false, false);
box.defineProperty(HTMLElement, 'arguments', null, false, false, false);
box.defineProperty(HTMLElement, 'caller', null, false, false, false);


box.defineProperty(HTMLElement.prototype, 'title', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["title"].get, "get title");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["title"].set, "set title");
box.defineProperty(HTMLElement.prototype, 'lang', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["lang"].get, "get lang");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["lang"].set, "set lang");
box.defineProperty(HTMLElement.prototype, 'translate', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["translate"].get, "get translate");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["translate"].set, "set translate");
box.defineProperty(HTMLElement.prototype, 'dir', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["dir"].get, "get dir");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["dir"].set, "set dir");
box.defineProperty(HTMLElement.prototype, 'hidden', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["hidden"].get, "get hidden");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["hidden"].set, "set hidden");
box.defineProperty(HTMLElement.prototype, 'accessKey', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["accessKey"].get, "get accessKey");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["accessKey"].set, "set accessKey");
box.defineProperty(HTMLElement.prototype, 'draggable', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["draggable"].get, "get draggable");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["draggable"].set, "set draggable");
box.defineProperty(HTMLElement.prototype, 'spellcheck', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["spellcheck"].get, "get spellcheck");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["spellcheck"].set, "set spellcheck");
box.defineProperty(HTMLElement.prototype, 'autocapitalize', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["autocapitalize"].get, "get autocapitalize");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["autocapitalize"].set, "set autocapitalize");
box.defineProperty(HTMLElement.prototype, 'contentEditable', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["contentEditable"].get, "get contentEditable");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["contentEditable"].set, "set contentEditable");
box.defineProperty(HTMLElement.prototype, 'enterKeyHint', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["enterKeyHint"].get, "get enterKeyHint");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["enterKeyHint"].set, "set enterKeyHint");
box.defineProperty(HTMLElement.prototype, 'isContentEditable', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["isContentEditable"].get, "get isContentEditable");
box.defineProperty(HTMLElement.prototype, 'inputMode', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["inputMode"].get, "get inputMode");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["inputMode"].set, "set inputMode");
box.defineProperty(HTMLElement.prototype, 'virtualKeyboardPolicy', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["virtualKeyboardPolicy"].get, "get virtualKeyboardPolicy");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["virtualKeyboardPolicy"].set, "set virtualKeyboardPolicy");
box.defineProperty(HTMLElement.prototype, 'offsetParent', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["offsetParent"].get, "get offsetParent");
box.defineProperty(HTMLElement.prototype, 'offsetTop', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["offsetTop"].get, "get offsetTop");
box.defineProperty(HTMLElement.prototype, 'offsetLeft', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["offsetLeft"].get, "get offsetLeft");
box.defineProperty(HTMLElement.prototype, 'offsetWidth', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["offsetWidth"].get, "get offsetWidth");
box.defineProperty(HTMLElement.prototype, 'offsetHeight', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["offsetHeight"].get, "get offsetHeight");
box.defineProperty(HTMLElement.prototype, 'innerText', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["innerText"].get, "get innerText");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["innerText"].set, "set innerText");
box.defineProperty(HTMLElement.prototype, 'outerText', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["outerText"].get, "get outerText");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["outerText"].set, "set outerText");
box.defineProperty(HTMLElement.prototype, 'onbeforexrselect', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onbeforexrselect"].get, "get onbeforexrselect");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onbeforexrselect"].set, "set onbeforexrselect");
box.defineProperty(HTMLElement.prototype, 'onabort', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onabort"].get, "get onabort");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onabort"].set, "set onabort");
box.defineProperty(HTMLElement.prototype, 'onbeforeinput', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onbeforeinput"].get, "get onbeforeinput");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onbeforeinput"].set, "set onbeforeinput");
box.defineProperty(HTMLElement.prototype, 'onblur', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onblur"].get, "get onblur");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onblur"].set, "set onblur");
box.defineProperty(HTMLElement.prototype, 'oncancel', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncancel"].get, "get oncancel");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncancel"].set, "set oncancel");
box.defineProperty(HTMLElement.prototype, 'oncanplay', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncanplay"].get, "get oncanplay");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncanplay"].set, "set oncanplay");
box.defineProperty(HTMLElement.prototype, 'oncanplaythrough', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncanplaythrough"].get, "get oncanplaythrough");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncanplaythrough"].set, "set oncanplaythrough");
box.defineProperty(HTMLElement.prototype, 'onchange', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onchange"].get, "get onchange");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onchange"].set, "set onchange");
box.defineProperty(HTMLElement.prototype, 'onclick', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onclick"].get, "get onclick");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onclick"].set, "set onclick");
box.defineProperty(HTMLElement.prototype, 'onclose', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onclose"].get, "get onclose");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onclose"].set, "set onclose");
box.defineProperty(HTMLElement.prototype, 'oncontextlost', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncontextlost"].get, "get oncontextlost");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncontextlost"].set, "set oncontextlost");
box.defineProperty(HTMLElement.prototype, 'oncontextmenu', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncontextmenu"].get, "get oncontextmenu");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncontextmenu"].set, "set oncontextmenu");
box.defineProperty(HTMLElement.prototype, 'oncontextrestored', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncontextrestored"].get, "get oncontextrestored");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncontextrestored"].set, "set oncontextrestored");
box.defineProperty(HTMLElement.prototype, 'oncuechange', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncuechange"].get, "get oncuechange");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncuechange"].set, "set oncuechange");
box.defineProperty(HTMLElement.prototype, 'ondblclick', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondblclick"].get, "get ondblclick");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondblclick"].set, "set ondblclick");
box.defineProperty(HTMLElement.prototype, 'ondrag', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondrag"].get, "get ondrag");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondrag"].set, "set ondrag");
box.defineProperty(HTMLElement.prototype, 'ondragend', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondragend"].get, "get ondragend");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondragend"].set, "set ondragend");
box.defineProperty(HTMLElement.prototype, 'ondragenter', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondragenter"].get, "get ondragenter");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondragenter"].set, "set ondragenter");
box.defineProperty(HTMLElement.prototype, 'ondragleave', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondragleave"].get, "get ondragleave");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondragleave"].set, "set ondragleave");
box.defineProperty(HTMLElement.prototype, 'ondragover', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondragover"].get, "get ondragover");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondragover"].set, "set ondragover");
box.defineProperty(HTMLElement.prototype, 'ondragstart', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondragstart"].get, "get ondragstart");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondragstart"].set, "set ondragstart");
box.defineProperty(HTMLElement.prototype, 'ondrop', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondrop"].get, "get ondrop");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondrop"].set, "set ondrop");
box.defineProperty(HTMLElement.prototype, 'ondurationchange', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondurationchange"].get, "get ondurationchange");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ondurationchange"].set, "set ondurationchange");
box.defineProperty(HTMLElement.prototype, 'onemptied', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onemptied"].get, "get onemptied");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onemptied"].set, "set onemptied");
box.defineProperty(HTMLElement.prototype, 'onended', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onended"].get, "get onended");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onended"].set, "set onended");
box.defineProperty(HTMLElement.prototype, 'onerror', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onerror"].get, "get onerror");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onerror"].set, "set onerror");
box.defineProperty(HTMLElement.prototype, 'onfocus', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onfocus"].get, "get onfocus");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onfocus"].set, "set onfocus");
box.defineProperty(HTMLElement.prototype, 'onformdata', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onformdata"].get, "get onformdata");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onformdata"].set, "set onformdata");
box.defineProperty(HTMLElement.prototype, 'oninput', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oninput"].get, "get oninput");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oninput"].set, "set oninput");
box.defineProperty(HTMLElement.prototype, 'oninvalid', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oninvalid"].get, "get oninvalid");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oninvalid"].set, "set oninvalid");
box.defineProperty(HTMLElement.prototype, 'onkeydown', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onkeydown"].get, "get onkeydown");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onkeydown"].set, "set onkeydown");
box.defineProperty(HTMLElement.prototype, 'onkeypress', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onkeypress"].get, "get onkeypress");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onkeypress"].set, "set onkeypress");
box.defineProperty(HTMLElement.prototype, 'onkeyup', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onkeyup"].get, "get onkeyup");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onkeyup"].set, "set onkeyup");
box.defineProperty(HTMLElement.prototype, 'onload', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onload"].get, "get onload");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onload"].set, "set onload");
box.defineProperty(HTMLElement.prototype, 'onloadeddata', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onloadeddata"].get, "get onloadeddata");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onloadeddata"].set, "set onloadeddata");
box.defineProperty(HTMLElement.prototype, 'onloadedmetadata', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onloadedmetadata"].get, "get onloadedmetadata");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onloadedmetadata"].set, "set onloadedmetadata");
box.defineProperty(HTMLElement.prototype, 'onloadstart', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onloadstart"].get, "get onloadstart");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onloadstart"].set, "set onloadstart");
box.defineProperty(HTMLElement.prototype, 'onmousedown', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmousedown"].get, "get onmousedown");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmousedown"].set, "set onmousedown");
box.defineProperty(HTMLElement.prototype, 'onmouseenter', undefined, true, true, undefined, function () {debugger; return 'undefined'}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmouseenter"].get, "get onmouseenter");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmouseenter"].set, "set onmouseenter");
box.defineProperty(HTMLElement.prototype, 'onmouseleave', undefined, true, true, undefined, function () {debugger; return 'undefined'}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmouseleave"].get, "get onmouseleave");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmouseleave"].set, "set onmouseleave");
box.defineProperty(HTMLElement.prototype, 'onmousemove', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmousemove"].get, "get onmousemove");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmousemove"].set, "set onmousemove");
box.defineProperty(HTMLElement.prototype, 'onmouseout', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmouseout"].get, "get onmouseout");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmouseout"].set, "set onmouseout");
box.defineProperty(HTMLElement.prototype, 'onmouseover', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmouseover"].get, "get onmouseover");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmouseover"].set, "set onmouseover");
box.defineProperty(HTMLElement.prototype, 'onmouseup', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmouseup"].get, "get onmouseup");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmouseup"].set, "set onmouseup");
box.defineProperty(HTMLElement.prototype, 'onmousewheel', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmousewheel"].get, "get onmousewheel");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onmousewheel"].set, "set onmousewheel");
box.defineProperty(HTMLElement.prototype, 'onpause', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpause"].get, "get onpause");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpause"].set, "set onpause");
box.defineProperty(HTMLElement.prototype, 'onplay', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onplay"].get, "get onplay");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onplay"].set, "set onplay");
box.defineProperty(HTMLElement.prototype, 'onplaying', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onplaying"].get, "get onplaying");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onplaying"].set, "set onplaying");
box.defineProperty(HTMLElement.prototype, 'onprogress', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onprogress"].get, "get onprogress");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onprogress"].set, "set onprogress");
box.defineProperty(HTMLElement.prototype, 'onratechange', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onratechange"].get, "get onratechange");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onratechange"].set, "set onratechange");
box.defineProperty(HTMLElement.prototype, 'onreset', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onreset"].get, "get onreset");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onreset"].set, "set onreset");
box.defineProperty(HTMLElement.prototype, 'onresize', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onresize"].get, "get onresize");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onresize"].set, "set onresize");
box.defineProperty(HTMLElement.prototype, 'onscroll', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onscroll"].get, "get onscroll");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onscroll"].set, "set onscroll");
box.defineProperty(HTMLElement.prototype, 'onsecuritypolicyviolation', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onsecuritypolicyviolation"].get, "get onsecuritypolicyviolation");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onsecuritypolicyviolation"].set, "set onsecuritypolicyviolation");
box.defineProperty(HTMLElement.prototype, 'onseeked', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onseeked"].get, "get onseeked");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onseeked"].set, "set onseeked");
box.defineProperty(HTMLElement.prototype, 'onseeking', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onseeking"].get, "get onseeking");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onseeking"].set, "set onseeking");
box.defineProperty(HTMLElement.prototype, 'onselect', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onselect"].get, "get onselect");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onselect"].set, "set onselect");
box.defineProperty(HTMLElement.prototype, 'onslotchange', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onslotchange"].get, "get onslotchange");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onslotchange"].set, "set onslotchange");
box.defineProperty(HTMLElement.prototype, 'onstalled', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onstalled"].get, "get onstalled");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onstalled"].set, "set onstalled");
box.defineProperty(HTMLElement.prototype, 'onsubmit', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onsubmit"].get, "get onsubmit");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onsubmit"].set, "set onsubmit");
box.defineProperty(HTMLElement.prototype, 'onsuspend', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onsuspend"].get, "get onsuspend");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onsuspend"].set, "set onsuspend");
box.defineProperty(HTMLElement.prototype, 'ontimeupdate', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ontimeupdate"].get, "get ontimeupdate");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ontimeupdate"].set, "set ontimeupdate");
box.defineProperty(HTMLElement.prototype, 'ontoggle', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ontoggle"].get, "get ontoggle");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ontoggle"].set, "set ontoggle");
box.defineProperty(HTMLElement.prototype, 'onvolumechange', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onvolumechange"].get, "get onvolumechange");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onvolumechange"].set, "set onvolumechange");
box.defineProperty(HTMLElement.prototype, 'onwaiting', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onwaiting"].get, "get onwaiting");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onwaiting"].set, "set onwaiting");
box.defineProperty(HTMLElement.prototype, 'onwebkitanimationend', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onwebkitanimationend"].get, "get onwebkitanimationend");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onwebkitanimationend"].set, "set onwebkitanimationend");
box.defineProperty(HTMLElement.prototype, 'onwebkitanimationiteration', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onwebkitanimationiteration"].get, "get onwebkitanimationiteration");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onwebkitanimationiteration"].set, "set onwebkitanimationiteration");
box.defineProperty(HTMLElement.prototype, 'onwebkitanimationstart', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onwebkitanimationstart"].get, "get onwebkitanimationstart");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onwebkitanimationstart"].set, "set onwebkitanimationstart");
box.defineProperty(HTMLElement.prototype, 'onwebkittransitionend', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onwebkittransitionend"].get, "get onwebkittransitionend");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onwebkittransitionend"].set, "set onwebkittransitionend");
box.defineProperty(HTMLElement.prototype, 'onwheel', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onwheel"].get, "get onwheel");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onwheel"].set, "set onwheel");
box.defineProperty(HTMLElement.prototype, 'onauxclick', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onauxclick"].get, "get onauxclick");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onauxclick"].set, "set onauxclick");
box.defineProperty(HTMLElement.prototype, 'ongotpointercapture', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ongotpointercapture"].get, "get ongotpointercapture");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ongotpointercapture"].set, "set ongotpointercapture");
box.defineProperty(HTMLElement.prototype, 'onlostpointercapture', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onlostpointercapture"].get, "get onlostpointercapture");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onlostpointercapture"].set, "set onlostpointercapture");
box.defineProperty(HTMLElement.prototype, 'onpointerdown', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointerdown"].get, "get onpointerdown");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointerdown"].set, "set onpointerdown");
box.defineProperty(HTMLElement.prototype, 'onpointermove', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointermove"].get, "get onpointermove");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointermove"].set, "set onpointermove");
box.defineProperty(HTMLElement.prototype, 'onpointerrawupdate', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointerrawupdate"].get, "get onpointerrawupdate");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointerrawupdate"].set, "set onpointerrawupdate");
box.defineProperty(HTMLElement.prototype, 'onpointerup', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointerup"].get, "get onpointerup");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointerup"].set, "set onpointerup");
box.defineProperty(HTMLElement.prototype, 'onpointercancel', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointercancel"].get, "get onpointercancel");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointercancel"].set, "set onpointercancel");
box.defineProperty(HTMLElement.prototype, 'onpointerover', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointerover"].get, "get onpointerover");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointerover"].set, "set onpointerover");
box.defineProperty(HTMLElement.prototype, 'onpointerout', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointerout"].get, "get onpointerout");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointerout"].set, "set onpointerout");
box.defineProperty(HTMLElement.prototype, 'onpointerenter', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointerenter"].get, "get onpointerenter");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointerenter"].set, "set onpointerenter");
box.defineProperty(HTMLElement.prototype, 'onpointerleave', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointerleave"].get, "get onpointerleave");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpointerleave"].set, "set onpointerleave");
box.defineProperty(HTMLElement.prototype, 'onselectstart', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onselectstart"].get, "get onselectstart");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onselectstart"].set, "set onselectstart");
box.defineProperty(HTMLElement.prototype, 'onselectionchange', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onselectionchange"].get, "get onselectionchange");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onselectionchange"].set, "set onselectionchange");
box.defineProperty(HTMLElement.prototype, 'onanimationend', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onanimationend"].get, "get onanimationend");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onanimationend"].set, "set onanimationend");
box.defineProperty(HTMLElement.prototype, 'onanimationiteration', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onanimationiteration"].get, "get onanimationiteration");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onanimationiteration"].set, "set onanimationiteration");
box.defineProperty(HTMLElement.prototype, 'onanimationstart', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onanimationstart"].get, "get onanimationstart");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onanimationstart"].set, "set onanimationstart");
box.defineProperty(HTMLElement.prototype, 'ontransitionrun', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ontransitionrun"].get, "get ontransitionrun");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ontransitionrun"].set, "set ontransitionrun");
box.defineProperty(HTMLElement.prototype, 'ontransitionstart', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ontransitionstart"].get, "get ontransitionstart");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ontransitionstart"].set, "set ontransitionstart");
box.defineProperty(HTMLElement.prototype, 'ontransitionend', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ontransitionend"].get, "get ontransitionend");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ontransitionend"].set, "set ontransitionend");
box.defineProperty(HTMLElement.prototype, 'ontransitioncancel', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ontransitioncancel"].get, "get ontransitioncancel");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["ontransitioncancel"].set, "set ontransitioncancel");
box.defineProperty(HTMLElement.prototype, 'oncopy', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncopy"].get, "get oncopy");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncopy"].set, "set oncopy");
box.defineProperty(HTMLElement.prototype, 'oncut', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncut"].get, "get oncut");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["oncut"].set, "set oncut");
box.defineProperty(HTMLElement.prototype, 'onpaste', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpaste"].get, "get onpaste");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onpaste"].set, "set onpaste");
box.defineProperty(HTMLElement.prototype, 'dataset', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["dataset"].get, "get dataset");
box.defineProperty(HTMLElement.prototype, 'nonce', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["nonce"].get, "get nonce");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["nonce"].set, "set nonce");
box.defineProperty(HTMLElement.prototype, 'autofocus', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["autofocus"].get, "get autofocus");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["autofocus"].set, "set autofocus");
box.defineProperty(HTMLElement.prototype, 'tabIndex', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["tabIndex"].get, "get tabIndex");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["tabIndex"].set, "set tabIndex");
box.defineProperty(HTMLElement.prototype, 'style', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["style"].get, "get style");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["style"].set, "set style");
box.defineProperty(HTMLElement.prototype, 'attributeStyleMap', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["attributeStyleMap"].get, "get attributeStyleMap");
box.defineProperty(HTMLElement.prototype, 'attachInternals', function attachInternals(){debugger;}, true, true, true); box.func_set_fake_toString(HTMLElement.prototype.attachInternals)
box.defineProperty(HTMLElement.prototype, 'blur', function blur(){debugger;}, true, true, true); box.func_set_fake_toString(HTMLElement.prototype.blur)
box.defineProperty(HTMLElement.prototype, 'click', function click(){debugger;}, true, true, true); box.func_set_fake_toString(HTMLElement.prototype.click)
box.defineProperty(HTMLElement.prototype, 'focus', function focus(){debugger;}, true, true, true); box.func_set_fake_toString(HTMLElement.prototype.focus)
box.defineProperty(HTMLElement.prototype, 'inert', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["inert"].get, "get inert");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["inert"].set, "set inert");

box.defineProperty(HTMLElement.prototype, 'onbeforematch', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onbeforematch"].get, "get onbeforematch");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(HTMLElement.prototype)["onbeforematch"].set, "set onbeforematch");

