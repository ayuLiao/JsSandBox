Element = function Element(){box.throwError("TypeError", "Illegal constructor") }
box.func_set_fake_toString(Element)
box.rename(Element.prototype, "Element")

Object.setPrototypeOf(Element.prototype,Node.prototype)

box.defineProperty(Element, 'length', 0, true, false, false);
box.defineProperty(Element, 'name', 'Element', true, false, false);
box.defineProperty(Element, 'arguments', null, false, false, false);
box.defineProperty(Element, 'caller', null, false, false, false);


box.defineProperty(Element.prototype, 'namespaceURI', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["namespaceURI"].get, "get namespaceURI");
box.defineProperty(Element.prototype, 'prefix', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["prefix"].get, "get prefix");
box.defineProperty(Element.prototype, 'localName', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["localName"].get, "get localName");
box.defineProperty(Element.prototype, 'tagName', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["tagName"].get, "get tagName");
box.defineProperty(Element.prototype, 'id', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["id"].get, "get id");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["id"].set, "set id");
box.defineProperty(Element.prototype, 'className', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["className"].get, "get className");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["className"].set, "set className");
box.defineProperty(Element.prototype, 'classList', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["classList"].get, "get classList");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["classList"].set, "set classList");
box.defineProperty(Element.prototype, 'slot', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["slot"].get, "get slot");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["slot"].set, "set slot");
box.defineProperty(Element.prototype, 'attributes', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["attributes"].get, "get attributes");
box.defineProperty(Element.prototype, 'shadowRoot', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["shadowRoot"].get, "get shadowRoot");
box.defineProperty(Element.prototype, 'part', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["part"].get, "get part");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["part"].set, "set part");
box.defineProperty(Element.prototype, 'assignedSlot', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["assignedSlot"].get, "get assignedSlot");
box.defineProperty(Element.prototype, 'innerHTML', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["innerHTML"].get, "get innerHTML");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["innerHTML"].set, "set innerHTML");
box.defineProperty(Element.prototype, 'outerHTML', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["outerHTML"].get, "get outerHTML");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["outerHTML"].set, "set outerHTML");
box.defineProperty(Element.prototype, 'scrollTop', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["scrollTop"].get, "get scrollTop");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["scrollTop"].set, "set scrollTop");
box.defineProperty(Element.prototype, 'scrollLeft', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["scrollLeft"].get, "get scrollLeft");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["scrollLeft"].set, "set scrollLeft");
box.defineProperty(Element.prototype, 'scrollWidth', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["scrollWidth"].get, "get scrollWidth");
box.defineProperty(Element.prototype, 'scrollHeight', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["scrollHeight"].get, "get scrollHeight");
box.defineProperty(Element.prototype, 'clientTop', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["clientTop"].get, "get clientTop");
box.defineProperty(Element.prototype, 'clientLeft', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["clientLeft"].get, "get clientLeft");
box.defineProperty(Element.prototype, 'clientWidth', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["clientWidth"].get, "get clientWidth");
box.defineProperty(Element.prototype, 'clientHeight', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["clientHeight"].get, "get clientHeight");
box.defineProperty(Element.prototype, 'onbeforecopy', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onbeforecopy"].get, "get onbeforecopy");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onbeforecopy"].set, "set onbeforecopy");
box.defineProperty(Element.prototype, 'onbeforecut', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onbeforecut"].get, "get onbeforecut");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onbeforecut"].set, "set onbeforecut");
box.defineProperty(Element.prototype, 'onbeforepaste', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onbeforepaste"].get, "get onbeforepaste");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onbeforepaste"].set, "set onbeforepaste");
box.defineProperty(Element.prototype, 'onsearch', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onsearch"].get, "get onsearch");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onsearch"].set, "set onsearch");
box.defineProperty(Element.prototype, 'elementTiming', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["elementTiming"].get, "get elementTiming");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["elementTiming"].set, "set elementTiming");
box.defineProperty(Element.prototype, 'onfullscreenchange', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onfullscreenchange"].get, "get onfullscreenchange");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onfullscreenchange"].set, "set onfullscreenchange");
box.defineProperty(Element.prototype, 'onfullscreenerror', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onfullscreenerror"].get, "get onfullscreenerror");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onfullscreenerror"].set, "set onfullscreenerror");
box.defineProperty(Element.prototype, 'onwebkitfullscreenchange', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onwebkitfullscreenchange"].get, "get onwebkitfullscreenchange");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onwebkitfullscreenchange"].set, "set onwebkitfullscreenchange");
box.defineProperty(Element.prototype, 'onwebkitfullscreenerror', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onwebkitfullscreenerror"].get, "get onwebkitfullscreenerror");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["onwebkitfullscreenerror"].set, "set onwebkitfullscreenerror");
box.defineProperty(Element.prototype, 'role', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["role"].get, "get role");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["role"].set, "set role");
box.defineProperty(Element.prototype, 'ariaAtomic', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaAtomic"].get, "get ariaAtomic");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaAtomic"].set, "set ariaAtomic");
box.defineProperty(Element.prototype, 'ariaAutoComplete', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaAutoComplete"].get, "get ariaAutoComplete");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaAutoComplete"].set, "set ariaAutoComplete");
box.defineProperty(Element.prototype, 'ariaBusy', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaBusy"].get, "get ariaBusy");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaBusy"].set, "set ariaBusy");
box.defineProperty(Element.prototype, 'ariaChecked', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaChecked"].get, "get ariaChecked");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaChecked"].set, "set ariaChecked");
box.defineProperty(Element.prototype, 'ariaColCount', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaColCount"].get, "get ariaColCount");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaColCount"].set, "set ariaColCount");
box.defineProperty(Element.prototype, 'ariaColIndex', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaColIndex"].get, "get ariaColIndex");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaColIndex"].set, "set ariaColIndex");
box.defineProperty(Element.prototype, 'ariaColSpan', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaColSpan"].get, "get ariaColSpan");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaColSpan"].set, "set ariaColSpan");
box.defineProperty(Element.prototype, 'ariaCurrent', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaCurrent"].get, "get ariaCurrent");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaCurrent"].set, "set ariaCurrent");
box.defineProperty(Element.prototype, 'ariaDescription', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaDescription"].get, "get ariaDescription");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaDescription"].set, "set ariaDescription");
box.defineProperty(Element.prototype, 'ariaDisabled', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaDisabled"].get, "get ariaDisabled");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaDisabled"].set, "set ariaDisabled");
box.defineProperty(Element.prototype, 'ariaExpanded', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaExpanded"].get, "get ariaExpanded");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaExpanded"].set, "set ariaExpanded");
box.defineProperty(Element.prototype, 'ariaHasPopup', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaHasPopup"].get, "get ariaHasPopup");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaHasPopup"].set, "set ariaHasPopup");
box.defineProperty(Element.prototype, 'ariaHidden', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaHidden"].get, "get ariaHidden");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaHidden"].set, "set ariaHidden");
box.defineProperty(Element.prototype, 'ariaInvalid', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaInvalid"].get, "get ariaInvalid");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaInvalid"].set, "set ariaInvalid");
box.defineProperty(Element.prototype, 'ariaKeyShortcuts', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaKeyShortcuts"].get, "get ariaKeyShortcuts");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaKeyShortcuts"].set, "set ariaKeyShortcuts");
box.defineProperty(Element.prototype, 'ariaLabel', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaLabel"].get, "get ariaLabel");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaLabel"].set, "set ariaLabel");
box.defineProperty(Element.prototype, 'ariaLevel', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaLevel"].get, "get ariaLevel");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaLevel"].set, "set ariaLevel");
box.defineProperty(Element.prototype, 'ariaLive', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaLive"].get, "get ariaLive");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaLive"].set, "set ariaLive");
box.defineProperty(Element.prototype, 'ariaModal', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaModal"].get, "get ariaModal");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaModal"].set, "set ariaModal");
box.defineProperty(Element.prototype, 'ariaMultiLine', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaMultiLine"].get, "get ariaMultiLine");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaMultiLine"].set, "set ariaMultiLine");
box.defineProperty(Element.prototype, 'ariaMultiSelectable', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaMultiSelectable"].get, "get ariaMultiSelectable");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaMultiSelectable"].set, "set ariaMultiSelectable");
box.defineProperty(Element.prototype, 'ariaOrientation', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaOrientation"].get, "get ariaOrientation");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaOrientation"].set, "set ariaOrientation");
box.defineProperty(Element.prototype, 'ariaPlaceholder', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaPlaceholder"].get, "get ariaPlaceholder");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaPlaceholder"].set, "set ariaPlaceholder");
box.defineProperty(Element.prototype, 'ariaPosInSet', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaPosInSet"].get, "get ariaPosInSet");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaPosInSet"].set, "set ariaPosInSet");
box.defineProperty(Element.prototype, 'ariaPressed', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaPressed"].get, "get ariaPressed");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaPressed"].set, "set ariaPressed");
box.defineProperty(Element.prototype, 'ariaReadOnly', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaReadOnly"].get, "get ariaReadOnly");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaReadOnly"].set, "set ariaReadOnly");
box.defineProperty(Element.prototype, 'ariaRelevant', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaRelevant"].get, "get ariaRelevant");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaRelevant"].set, "set ariaRelevant");
box.defineProperty(Element.prototype, 'ariaRequired', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaRequired"].get, "get ariaRequired");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaRequired"].set, "set ariaRequired");
box.defineProperty(Element.prototype, 'ariaRoleDescription', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaRoleDescription"].get, "get ariaRoleDescription");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaRoleDescription"].set, "set ariaRoleDescription");
box.defineProperty(Element.prototype, 'ariaRowCount', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaRowCount"].get, "get ariaRowCount");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaRowCount"].set, "set ariaRowCount");
box.defineProperty(Element.prototype, 'ariaRowIndex', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaRowIndex"].get, "get ariaRowIndex");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaRowIndex"].set, "set ariaRowIndex");
box.defineProperty(Element.prototype, 'ariaRowSpan', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaRowSpan"].get, "get ariaRowSpan");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaRowSpan"].set, "set ariaRowSpan");
box.defineProperty(Element.prototype, 'ariaSelected', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaSelected"].get, "get ariaSelected");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaSelected"].set, "set ariaSelected");
box.defineProperty(Element.prototype, 'ariaSetSize', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaSetSize"].get, "get ariaSetSize");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaSetSize"].set, "set ariaSetSize");
box.defineProperty(Element.prototype, 'ariaSort', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaSort"].get, "get ariaSort");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaSort"].set, "set ariaSort");
box.defineProperty(Element.prototype, 'ariaValueMax', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaValueMax"].get, "get ariaValueMax");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaValueMax"].set, "set ariaValueMax");
box.defineProperty(Element.prototype, 'ariaValueMin', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaValueMin"].get, "get ariaValueMin");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaValueMin"].set, "set ariaValueMin");
box.defineProperty(Element.prototype, 'ariaValueNow', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaValueNow"].get, "get ariaValueNow");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaValueNow"].set, "set ariaValueNow");
box.defineProperty(Element.prototype, 'ariaValueText', undefined, true, true, undefined, function () {debugger}, function (value) {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaValueText"].get, "get ariaValueText");box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["ariaValueText"].set, "set ariaValueText");
box.defineProperty(Element.prototype, 'children', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["children"].get, "get children");
box.defineProperty(Element.prototype, 'firstElementChild', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["firstElementChild"].get, "get firstElementChild");
box.defineProperty(Element.prototype, 'lastElementChild', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["lastElementChild"].get, "get lastElementChild");
box.defineProperty(Element.prototype, 'childElementCount', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["childElementCount"].get, "get childElementCount");
box.defineProperty(Element.prototype, 'previousElementSibling', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["previousElementSibling"].get, "get previousElementSibling");
box.defineProperty(Element.prototype, 'nextElementSibling', undefined, true, true, undefined, function () {debugger});box.func_set_fake_toString(Object.getOwnPropertyDescriptors(Element.prototype)["nextElementSibling"].get, "get nextElementSibling");
box.defineProperty(Element.prototype, 'after', function after(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.after)
box.defineProperty(Element.prototype, 'animate', function animate(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.animate)
box.defineProperty(Element.prototype, 'append', function append(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.append)
box.defineProperty(Element.prototype, 'attachShadow', function attachShadow(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.attachShadow)
box.defineProperty(Element.prototype, 'before', function before(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.before)
box.defineProperty(Element.prototype, 'closest', function closest(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.closest)
box.defineProperty(Element.prototype, 'computedStyleMap', function computedStyleMap(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.computedStyleMap)
box.defineProperty(Element.prototype, 'getAttribute', function getAttribute(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.getAttribute)
box.defineProperty(Element.prototype, 'getAttributeNS', function getAttributeNS(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.getAttributeNS)
box.defineProperty(Element.prototype, 'getAttributeNames', function getAttributeNames(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.getAttributeNames)
box.defineProperty(Element.prototype, 'getAttributeNode', function getAttributeNode(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.getAttributeNode)
box.defineProperty(Element.prototype, 'getAttributeNodeNS', function getAttributeNodeNS(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.getAttributeNodeNS)
box.defineProperty(Element.prototype, 'getBoundingClientRect', function getBoundingClientRect(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.getBoundingClientRect)
box.defineProperty(Element.prototype, 'getClientRects', function getClientRects(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.getClientRects)
box.defineProperty(Element.prototype, 'getElementsByClassName', function getElementsByClassName(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.getElementsByClassName)
box.defineProperty(Element.prototype, 'getElementsByTagName', function getElementsByTagName(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.getElementsByTagName)
box.defineProperty(Element.prototype, 'getElementsByTagNameNS', function getElementsByTagNameNS(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.getElementsByTagNameNS)
box.defineProperty(Element.prototype, 'getInnerHTML', function getInnerHTML(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.getInnerHTML)
box.defineProperty(Element.prototype, 'hasAttribute', function hasAttribute(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.hasAttribute)
box.defineProperty(Element.prototype, 'hasAttributeNS', function hasAttributeNS(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.hasAttributeNS)
box.defineProperty(Element.prototype, 'hasAttributes', function hasAttributes(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.hasAttributes)
box.defineProperty(Element.prototype, 'hasPointerCapture', function hasPointerCapture(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.hasPointerCapture)
box.defineProperty(Element.prototype, 'insertAdjacentElement', function insertAdjacentElement(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.insertAdjacentElement)
box.defineProperty(Element.prototype, 'insertAdjacentHTML', function insertAdjacentHTML(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.insertAdjacentHTML)
box.defineProperty(Element.prototype, 'insertAdjacentText', function insertAdjacentText(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.insertAdjacentText)
box.defineProperty(Element.prototype, 'matches', function matches(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.matches)
box.defineProperty(Element.prototype, 'prepend', function prepend(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.prepend)
box.defineProperty(Element.prototype, 'querySelector', function querySelector(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.querySelector)
box.defineProperty(Element.prototype, 'querySelectorAll', function querySelectorAll(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.querySelectorAll)
box.defineProperty(Element.prototype, 'releasePointerCapture', function releasePointerCapture(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.releasePointerCapture)
box.defineProperty(Element.prototype, 'remove', function remove(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.remove)
box.defineProperty(Element.prototype, 'removeAttribute', function removeAttribute(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.removeAttribute)
box.defineProperty(Element.prototype, 'removeAttributeNS', function removeAttributeNS(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.removeAttributeNS)
box.defineProperty(Element.prototype, 'removeAttributeNode', function removeAttributeNode(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.removeAttributeNode)
box.defineProperty(Element.prototype, 'replaceChildren', function replaceChildren(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.replaceChildren)
box.defineProperty(Element.prototype, 'replaceWith', function replaceWith(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.replaceWith)
box.defineProperty(Element.prototype, 'requestFullscreen', function requestFullscreen(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.requestFullscreen)
box.defineProperty(Element.prototype, 'requestPointerLock', function requestPointerLock(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.requestPointerLock)
box.defineProperty(Element.prototype, 'scroll', function scroll(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.scroll)
box.defineProperty(Element.prototype, 'scrollBy', function scrollBy(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.scrollBy)
box.defineProperty(Element.prototype, 'scrollIntoView', function scrollIntoView(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.scrollIntoView)
box.defineProperty(Element.prototype, 'scrollIntoViewIfNeeded', function scrollIntoViewIfNeeded(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.scrollIntoViewIfNeeded)
box.defineProperty(Element.prototype, 'scrollTo', function scrollTo(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.scrollTo)
box.defineProperty(Element.prototype, 'setAttribute', function setAttribute(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.setAttribute)
box.defineProperty(Element.prototype, 'setAttributeNS', function setAttributeNS(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.setAttributeNS)
box.defineProperty(Element.prototype, 'setAttributeNode', function setAttributeNode(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.setAttributeNode)
box.defineProperty(Element.prototype, 'setAttributeNodeNS', function setAttributeNodeNS(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.setAttributeNodeNS)
box.defineProperty(Element.prototype, 'setPointerCapture', function setPointerCapture(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.setPointerCapture)
box.defineProperty(Element.prototype, 'toggleAttribute', function toggleAttribute(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.toggleAttribute)
box.defineProperty(Element.prototype, 'webkitMatchesSelector', function webkitMatchesSelector(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.webkitMatchesSelector)
box.defineProperty(Element.prototype, 'webkitRequestFullScreen', function webkitRequestFullScreen(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.webkitRequestFullScreen)
box.defineProperty(Element.prototype, 'webkitRequestFullscreen', function webkitRequestFullscreen(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.webkitRequestFullscreen)
box.defineProperty(Element.prototype, 'checkVisibility', function checkVisibility(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.checkVisibility)
box.defineProperty(Element.prototype, 'getAnimations', function getAnimations(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.getAnimations)

box.defineProperty(Element.prototype, 'setHTML', function setHTML(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.setHTML)
box.defineProperty(Element.prototype, 'closestReplenish', function closestReplenish(){debugger;}, true, true, true); box.func_set_fake_toString(Element.prototype.closestReplenish)

